import keyboards
import messages
import os
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, executor, types

load_dotenv()
PROXY_URL = "http://proxy.server:3128"
bot = Bot(token=os.environ.get('BOT_API_TOKEN'), proxy=PROXY_URL)
dp = Dispatcher(bot)


#start
@dp.message_handler(commands=['start', 'c'])
async def started_message(message: types.Message):
    await message.answer(text=messages.hello(), reply_markup=keyboards.MAIN_BTNS)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–º–µ–Ω—é"
@dp.message_handler(text='–ú–ï–ù–Æ ü•©')
async def menu_message(message: types.Message):
    await message.answer(text=messages.choose_restaurant(), reply_markup=keyboards.MENU_BTNS)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ê–î–†–ï–° –ò –í–†–ï–ú–Ø –†–ê–ë–û–¢–´"
@dp.message_handler(text='–ê–î–†–ï–° –ò –í–†–ï–ú–Ø –†–ê–ë–û–¢–´ üï∞Ô∏è')
async def address_message(message: types.Message):
    await message.answer(text=messages.message_address(), reply_markup=keyboards.BACK_BTNS)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–ê–® –°–ê–ô–¢"
@dp.message_handler(text='–ù–ê–® –°–ê–ô–¢ üåê')
async def site_message(message: types.Message):
    await message.answer(text=messages.message_site_link(), reply_markup=keyboards.BACK_BTNS)


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–†–û–ë–ö–û–í–´–ô –°–ë–û–†"
@dp.message_handler(text='–ü–†–û–ë–ö–û–í–´–ô –°–ë–û–† ü•É')
async def collecting_message(message: types.Message):
    await message.answer(text=messages.message_collecting(), reply_markup=keyboards.BACK_BTNS)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ê–ö–¶–ò–ò"
@dp.message_handler(text='–ê–ö–¶–ò–ò üî•')
async def collecting_message(message: types.Message):
    await message.answer(text=messages.message_stock(), reply_markup=keyboards.BACK_BTNS)


@dp.callback_query_handler(text='back')
async def menu_message_main(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(
        callback_query.from_user.id,
        text=messages.hello(),
        reply_markup=keyboards.MAIN_BTNS)


@dp.callback_query_handler(text='address1')
async def dialog_address1(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(
        callback_query_id=callback_query.id,
        text="https://str.thebull.ru/takeout",
        show_alert=True)


@dp.callback_query_handler(text='address2')
async def dialog_address2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(
        callback_query_id=callback_query.id,
        text="https://msk.thebull.ru/takeout/",
        show_alert=True)


executor.start_polling(dp, skip_updates=True)